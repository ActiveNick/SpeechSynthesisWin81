<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="VoiceSynthesis.Scenario2"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:VoiceSynthesis"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

  <Grid x:Name="LayoutRoot" Background="White">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <Grid x:Name="Input" Grid.Row="0">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <TextBlock x:Name="InputTextBlock1" Grid.Row="0" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
        This sample showcases basic Voice Synthesis functionality in Windows, using WinRT APIs to convert SSML to speech. Users can now add text to speech functionality easily to their modern apps!
      </TextBlock>
      <StackPanel Orientation="Horizontal" Margin="0,10,0,0" Grid.Row="1">
        <Button x:Name="btnSpeak" Content="Speak" ToolTipService.ToolTip="Text will be played" Margin="0,0,10,0" Click="BtnSpeak_Click"/>
        <Button x:Name="btnSaveToFile"  Content="Save Audio to File" ToolTipService.ToolTip="Select a file to copy the audio to" Margin="0,0,10,0" Click="BtnSaveToFile_Click"/>
        <ComboBox x:Name="listboxVoiceChooser" SelectionChanged="ListboxVoiceChooser_SelectionChanged" Width="200" Height="Auto" Margin="4,2"/>
      </StackPanel>

      <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the input section -->
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup>
          <VisualState x:Name="InputFullScreenLandscape"/>
          <VisualState x:Name="InputFilled"/>
          <VisualState x:Name="InputFullScreenPortrait"/>
          <VisualState x:Name="InputSnapped"/>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>

    <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
      <StackPanel>
        <MediaElement Grid.Row="0" x:Name="media" AutoPlay="False" CurrentStateChanged="media_CurrentStateChanged" />
        <TextBox x:Name="tbData"
             Grid.Row="0"
             Margin="10,10,-930,0"
             TextWrapping="Wrap"
             AcceptsReturn="True"
             Text="&lt;speak version='1.0' xmlns='http://www.w3.org/2001/10/synthesis'  
            xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'  
            xsi:schemaLocation='http://www.w3.org/2001/10/synthesis  http://www.w3.org/TR/speech-synthesis/synthesis.xsd'  
            xml:lang='en-US'&gt;  
        This sentence has marks &lt;mark name='mark1'/&gt;Here, and another mark here     &lt;mark name='mark2'/&gt;.
        This is an example of how to speak the word &lt;phoneme alphabet='x-microsoft-ups' ph='S1 W AA T . CH AX . M AX . S2 K AA L . IH T'&gt; 
          whatchamacallit &lt;/phoneme&gt;. 
        This is an example of how to use the say-as tag to say a Date &lt;say-as interpret-as='date:mdy' &gt; 04/30/2013        &lt;/say-as&gt;.
        This &lt;say-as interpret-as='ordinal'&gt; 4th &lt;/say-as&gt; example is how to use the ordinal data type.  
        &lt;/speak&gt;"
             FontSize="16"
         VerticalAlignment="Stretch"
         HorizontalAlignment="Stretch"
                 />
      </StackPanel>

      <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts for the output section -->
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup>
          <VisualState x:Name="OutputFullScreenLandscape"/>
          <VisualState x:Name="OutputFilled"/>
          <VisualState x:Name="OutputFullScreenPortrait"/>
          <VisualState x:Name="OutputSnapped"/>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </Grid>
</common:LayoutAwarePage>
